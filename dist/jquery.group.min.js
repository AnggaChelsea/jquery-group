(function(){!function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o;return l=function(a){return a-1+a%2},n=function(a){var b;return k.test(a)?(b=parseInt(a),isNaN(b)?null:b):null},c=function(b){return a(b.currentTarget)},b=function(a){return[a,c(a)]},m=function(a,b){return a.findIndex(function(a){return a.id===b.id})},o=function(a){return{teams:a.participants.value(),matches:a.matches.map(function(b){return{a:{team:m(a.participants,b.a.team),score:b.a.score},b:{team:m(a.participants,b.b.team),score:b.b.score},round:b.round}}).value()}},i=function(a,b){return a.map(function(a){var c,d,e,f,g,h;return d=b.filter(function(a){return null!==a.a.score&&null!==a.b.score}).filter(function(b){return b.a.team===a||b.b.team===a}).map(function(b){return b.a.team===a?{ownScore:b.a.score,opponentScore:b.b.score}:{ownScore:b.b.score,opponentScore:b.a.score}}),f=d.reduce(function(a,b){return a+b.ownScore},0),e=d.reduce(function(a,b){return a+b.opponentScore},0),h=d.filter(function(a){return a.ownScore>a.opponentScore}).size(),c=d.filter(function(a){return a.ownScore<a.opponentScore}).size(),g=d.filter(function(a){return a.ownScore===a.opponentScore}).size(),{team:a,wins:h,losses:c,ties:g,points:3*h+g,roundWins:f,roundLosses:e,ratio:f-e}}).sortBy(function(a){return-a.ratio}).sortBy(function(a){return-a.points})},k=new RegExp(/^[0-9]+$/),g=0,d=function(){return++g},h=0,e=function(){return++h},f=function(f,g,h,j){var k,m,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G;return F=function(a){return f.find("[data-roundid='"+a+"']")},r=function(a){return f.find("[data-matchid='"+a+"']")},j&&f.addClass("read-write"),G=function(){var b,d,f,g,h,i,k;return i='        <td>{{wins}}</td>        <td>{{losses}}</td>        <td>{{ties}}</td>        <td>{{points}}</td>        <td title="Won {{roundWins}}, lost {{roundLosses}} bouts">{{ratio}}</td>',k=Handlebars.compile('        <div class="standings">        <table>        <colgroup>        <col style="width: 50%">        <col span="5" style="width: 10%">        </colgroup>        <tr><th></th><th>W</th><th>L</th><th>T</th><th>P</th><th>R</th></tr>        {{#each this}}          <tr><td>{{team.name}}</td>'+i+"</tr>        {{/each}}        </table>        </div>"),h=Handlebars.compile('        <div class="standings">        <table>        <colgroup>        <col style="width: 40%">        <col span="6" style="width: 10%">        </colgroup>        <tr><th></th><th>W</th><th>L</th><th>T</th><th>P</th><th>R</th><th>Drop?</th></tr>        {{#each this}}        <tr><td><input class="name" type="text" data-prev="{{team.name}}" value="{{team.name}}" /></td>'+i+'<td class="drop" data-name="{{team.id}}">Drop</td></tr>        {{/each}}        <tr><td><input class="add" type="text" value="{{name}}" /></td><td colspan="6"><input type="submit" value="Add" disabled="disabled" /></td></tr>        </table>        </div>'),f=Handlebars.compile('        <div data-roundid="{{this}}" class="round">        {{#if this}}          <header>Round {{this}}</header>        {{else}}          <header>Unassigned</header>        {{/if}}        </div>'),d=Handlebars.compile('        <div data-matchid="{{id}}" class="match" draggable="{{draggable}}">        <span class="home">{{a.team.name}}</span>        <div class="home">{{a.score}}</div>        <div class="away">{{b.score}}</div>        <span class="away">{{b.team.name}}</span>        </div>'),b=Handlebars.compile('        <div data-matchid="{{id}}" class="match" draggable="{{draggable}}">        <span class="home">{{a.team.name}}</span>        <input type="text" class="home" value="{{a.score}}" />        <input type="text" class="away" value="{{b.score}}" />        <span class="away">{{b.team.name}}</span>        </div>'),g=Handlebars.compile('<div class="rounds"></div>'),{standings:function(b,d,f,g){var i,l,m,n;return g=g||_([]),j?(n=a(h(g.value())),i=n.find("input[type=submit]"),m=n.find("input").asEventStream("keyup").map(c).map(function(a){var b,c,d;return d=a.val(),b=a.attr("data-prev"),c=d.length>0&&(!g.pluck("name").contains(d)||b===d),{el:a,value:d,valid:c}}).toProperty(),m.onValue(function(a){return a.el.toggleClass("conflict",!a.valid),a.el.hasClass("add")?a.valid?i.removeAttr("disabled"):i.attr("disabled","disabled"):void 0}),l=m.map(function(a){return a.valid}).toProperty(),n.find("input.name").asEventStream("change").filter(l).map(".target").map(a).onValue(function(a){return d.push({from:a.attr("data-prev"),to:a.val()}),a.attr("data-prev",a.val())}),n.find("input.add").asEventStream("change").filter(l).map(".target").map(a).map(function(a){return a.val()}).onValue(function(a){return b.push({id:e(),name:a})}),n.find("td.drop").asEventStream("click").map(".target").map(a).map(function(a){return a.attr("data-name")}).onValue(function(a){return f.push(parseInt(a))}),n):a(k(g.value()))},rounds:a(g()),round:function(b){return a(f(b))},matchEdit:function(c){return a(b(c))},matchView:function(b){return a(d(b))}}}(),q=function(){return{create:function(a,d){return new function(){var e,f;f=G.round(d),this.markup=f,j&&(e=0,f.asEventStream("dragover").doAction(".preventDefault").onValue(function(){}),f.asEventStream("dragenter").doAction(".preventDefault").map(c).onValue(function(a){0===e&&a.addClass("over"),e++}),f.asEventStream("dragleave").doAction(".preventDefault").map(c).onValue(function(a){e--,0===e&&a.removeClass("over")}),f.asEventStream("drop").doAction(".preventDefault").map(b).onValues(function(b,c){var d,f;e=0,d=b.originalEvent.dataTransfer.getData("Text"),f=r(d),c.append(f),c.removeClass("over"),a.push({match:parseInt(d),round:parseInt(c.attr("data-roundId"))})}))}}}}(),p=function(){return{create:function(d,e){return new function(){var g;return e=a.extend({},e),e.draggable=(null!=j).toString(),j?(g=G.matchEdit(e),this.markup=g,g.find("input").asEventStream("keyup").map(c).onValue(function(a){return a.toggleClass("conflict",null===n(a.val()))}),g.find("input").asEventStream("change").onValue(function(){var a,b,c;return a=n(g.find("input.home").val()),b=n(g.find("input.away").val()),null!==a&&null!==b?(c={a:{team:e.a.team,score:a},b:{team:e.b.team,score:b}},d.push(c)):void 0}),g.asEventStream("dragstart").map(".originalEvent").map(b).onValues(function(a,b){return a.dataTransfer.setData("Text",e.id),b.css("opacity",.5),f.find(".round").addClass("droppable")}),g.asEventStream("dragend").map(".originalEvent").map(b).onValues(function(a,b){return b.css("opacity",1),f.find(".droppable").removeClass("droppable")}),void 0):(this.markup=G.matchView(e),void 0)}}}}(),m=a('<div class="standings"></div>').appendTo(f),k=G.rounds.appendTo(f),t=new Bacon.Bus,z=new Bacon.Bus,B=new Bacon.Bus,D=new Bacon.Bus,u=new Bacon.Bus,A=new Bacon.Bus,s=t.toProperty({participants:_([]),matches:_([])}),v=s.sampledBy(z,function(a,b){var c,e;return a.participants.size()>0&&(c=a.participants.map(function(a){return{id:d(),a:{team:a,score:null},b:{team:b,score:null}}}),a.matches=a.matches.union(c.value())),a.participants.push(b),e=l(a.participants.size()),_(_.range(k.find(".round").length,e)).each(function(a){return k.append(q.create(u,a+1).markup)}),a}),x=s.sampledBy(A,function(a,b){var c,d,e;return a.matches.filter(function(a){return a.a.team.id===b||a.b.team.id===b}).map(function(a){return a.id}).forEach(function(a){return r(a).remove()}),e=l(a.participants.size()),a.participants=a.participants.filter(function(a){return a.id!==b}),d=l(a.participants.size()),a.matches=a.matches.filter(function(a){return a.a.team.id!==b&&a.b.team.id!==b}).map(function(a){return a.round>d&&(a.round=0),a}),c=F(0),_(_.range(d+1,e+1)).each(function(a){var b,d;return d=F(a),b=d.find(".match"),c.append(b),d.remove()}),a}),E=s.sampledBy(D,function(a,b){return a.matches=a.matches.map(function(a){return a.a.team.id===b.a.team.id&&a.b.team.id===b.b.team.id?(void 0!==b.round&&(a.round=b.round),a.a.score=b.a.score,a.b.score=b.b.score):a.a.team.id===b.b.team.id&&a.b.team.id===b.a.team.id&&(void 0!==b.round&&(a.round=b.round),a.a.score=b.b.score,a.b.score=b.a.score),a}),a}),y=s.sampledBy(B,function(a,b){return a.participants=a.participants.map(function(a){return a.name===b.from&&(a.name=b.to),a}),a}),w=s.sampledBy(u,function(a,b){return a.matches=a.matches.map(function(a){return a.id===b.match&&(a.round=b.round),a}),a}),C=Bacon.mergeAll([v,E,y,x,w]),C.throttle(10).onValue(function(a){return j?j(o(a)):void 0}),v.merge(E).merge(x).throttle(10).onValue(function(a){return f.find(".standings").replaceWith(G.standings(z,B,A,i(a.participants,a.matches),null))}),m.replaceWith(G.standings(z)),y.merge(v).merge(E).throttle(10).onValue(function(b){var c,d,e;return d=b.matches.filter(function(a){return a.round}),e=b.matches.filter(function(a){return!a.round}),d.each(function(a){var b,c;return b=r(a.id),c=p.create(D,a).markup,b.length?b.replaceWith(c):F(a.round).append(c)}),e.size()>0||j?(c=F(0),0===c.length&&(c=a(q.create(u,0).markup).appendTo(f)),e.each(function(a){var b,d;return b=r(a.id),d=p.create(D,a).markup,b.length?b.replaceWith(d):c.append(d)})):void 0}),g.each(function(a){return z.push(a)}),h.each(function(a){return D.push(a)})},j={init:function(b){var c,d,e;return b=b||{},c=this,e=_(),d=_(),b.init&&(e=_(b.init.teams),d=_(b.init.matches).map(function(a){return a.a.team=b.init.teams[a.a.team],a.b.team=b.init.teams[a.b.team],a})),f(a('<div class="jqgroup"></div>').appendTo(c),e,d,b.save||null)}},a.fn.group=function(b){return j[b]?j[b].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof b&&b?a.error("Method "+b+" does not exist on jQuery.group"):j.init.apply(this,arguments)}}(jQuery)}).call(this);