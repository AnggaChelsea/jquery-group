(function(a){function n(a){return a-1+a%2}function t(a){if(!s.test(a))return null;var n=parseInt(a);return isNaN(n)?null:n}function e(n){return a(n.target)}function r(a){return[a,e(a)]}function o(a,n){return a.map(function(a){var t=n.filter(function(a){return null!==a.a.score&&null!==a.b.score}).filter(function(n){return n.a.name===a||n.b.name===a}).map(function(n){return n.a.name===a?{ownScore:n.a.score,opponentScore:n.b.score}:{ownScore:n.b.score,opponentScore:n.a.score}}),e=t.filter(function(a){return a.ownScore>a.opponentScore}).size(),r=t.filter(function(a){return a.ownScore<a.opponentScore}).size(),o=t.filter(function(a){return a.ownScore==a.opponentScore}).size();return{name:a,wins:e,losses:r,ties:o,points:3*e+o}}).sortBy(function(a){return-a.points})}var s=RegExp(/^[0-9]+$/),i=function(s,i,u,d){d&&s.addClass("read-write");var c=function(){var n=Handlebars.compile('<div class="standings">Standings<table><colgroup><col style="width: 60%"><col span="4" style="width: 10%"></colgroup><tr><th>Name</th><th>W</th><th>L</th><th>T</th><th>P</tr>{{#each this}}<tr><td>{{name}}</td><td>{{wins}}</td><td>{{losses}}</td><td>{{ties}}</td><td>{{points}}</td></tr>{{/each}}</table></div>'),t=Handlebars.compile('<div class="standings">Standings<table><colgroup><col style="width: 60%"><col span="4" style="width: 10%"></colgroup><tr><th>Name</th><th>W</th><th>L</th><th>T</th><th>P</tr>{{#each this}}<tr><td><input class="name" type="text" data-prev="{{name}}" value="{{name}}" /></td><td>{{wins}}</td><td>{{losses}}</td><td>{{ties}}</td><td>{{points}}</td></tr>{{/each}}<tr><td><input class="add" type="text" value="{{name}}" /></td><td colspan="4"><input type="submit" value="Add" disabled="disabled" /></td></tr></table></div>'),r=Handlebars.compile('<div class="rounds"></div>'),o=Handlebars.compile('<div class="unassigned"><header>Unassigned</header></div>');return{standings:function(r,o,s){if(s=s||_([]),!d)return a(n(s.value()));var i=a(t(s.value())),u=i.find("input[type=submit]"),c=i.find("input").asEventStream("keyup").map(e).map(function(a){var n=a.val(),t=a.attr("data-prev"),e=n.length>0&&(!s.pluck("name").contains(n)||t===n);return console.log(e),{el:a,value:n,valid:e}}).toProperty();c.onValue(function(a){a.el.toggleClass("conflict",!a.valid),a.el.hasClass("add")&&(a.valid?u.removeAttr("disabled"):u.attr("disabled","disabled"))});var l=c.map(function(a){return a.valid}).toProperty();return i.find("input.name").asEventStream("change").filter(l).map(".target").map(a).onValue(function(a){o.push({from:a.attr("data-prev"),to:a.val()}),a.attr("data-prev",a.val())}),i.find("input.add").asEventStream("change").filter(l).map(".target").map(a).map(function(a){return a.val()}).onValue(function(a){r.push(a)}),i},rounds:a(r()),unassigned:a(o())}}(),l=function(){var n=Handlebars.compile('<div data-roundId="{{round}}" class="round" style="width: {{width}}%"><header>Round {{round}}</header></div>');return{create:function(t,o){return new function(){var i=a(n({round:o,width:100}));this.markup=i,d&&(i.asEventStream("dragover").doAction(".preventDefault").onValue(function(){}),i.asEventStream("dragenter").doAction(".preventDefault").map(e).onValue(function(a){a.addClass("over")}),i.asEventStream("dragleave").doAction(".preventDefault").map(e).onValue(function(a){a.removeClass("over")}),i.asEventStream("drop").doAction(".preventDefault").map(r).onValues(function(a,n){var e=a.originalEvent.dataTransfer.getData("Text"),r=s.find('[data-matchId="'+e+'"]');n.append(r),n.removeClass("over"),t.push({match:parseInt(e),round:parseInt(n.attr("data-roundId"))})}))}}}}(),p=function(){var n=Handlebars.compile('<div data-matchId="{{id}}" class="match" draggable="{{draggable}}"><span class="home">{{a.name}}</span><div class="home">{{a.score}}</div><span class="away">{{b.name}}</span><div class="away">{{b.score}}</div></div>'),o=Handlebars.compile('<div data-matchId="{{id}}" class="match" draggable="{{draggable}}"><span class="home">{{a.name}}</span><input type="text" class="home" value="{{a.score}}" /><span class="away">{{b.name}}</span><input type="text" class="away" value="{{b.score}}" /></div>');return{create:function(i,u){return new function(){if(u=a.extend({},u),u.draggable=""+(null!=d),!d)return this.markup=a(n(u)),void 0;var c=a(o(u));this.markup=c,c.find("input").asEventStream("keyup").map(e).onValue(function(a){a.toggleClass("conflict",null===t(a.val()))}),c.find("input").asEventStream("change").onValue(function(){var a=t(c.find("input.home").val()),n=t(c.find("input.away").val());if(null!==a&&null!==n){var e={a:{name:u.a.name,score:a},b:{name:u.b.name,score:n}};i.push(e)}}),c.asEventStream("dragstart").map(".originalEvent").map(r).onValues(function(a,n){a.dataTransfer.setData("Text",u.id),n.css("opacity",.5),s.find(".round").addClass("droppable")}),c.asEventStream("dragend").map(".originalEvent").map(r).onValues(function(a,n){n.css("opacity",1),s.find(".round").removeClass("droppable")})}}}}(),m=a('<div class="standings"></div>').appendTo(s),v=c.rounds.appendTo(s),f=new Bacon.Bus,h=new Bacon.Bus,g=new Bacon.Bus,b=new Bacon.Bus,y=new Bacon.Bus,w=f.toProperty({participants:_([]),matches:_([])}),S=w.sampledBy(h,function(a,t){if(a.participants.size()>0){var e=a.participants.map(function(n,e){return{id:a.matches.size()+e,a:{name:n,score:null},b:{name:t,score:null}}});a.matches=a.matches.union(e.value())}a.participants.push(t);var r=n(a.participants.size());return _(_.range(s.find(".round").length,r)).each(function(a){v.append(l.create(y,a+1,r).markup)}),a}),B=w.sampledBy(b,function(a,n){return a.matches=a.matches.map(function(a){return a.a.name===n.a.name&&a.b.name===n.b.name?(a.round=n.round,a.a.score=n.a.score,a.b.score=n.b.score):a.a.name===n.b.name&&a.b.name===n.a.name&&(a.round=n.round,a.a.score=n.b.score,a.b.score=n.a.score),a}),a}),E=w.sampledBy(g,function(a,n){return a.participants=a.participants.map(function(a){return a===n.from?n.to:a}),a.matches=a.matches.map(function(a){return a.a.name===n.from?a.a.name=n.to:a.b.name===n.from&&(a.b.name=n.to),a}),a}),V=w.sampledBy(y,function(a,n){return a.matches=a.matches.map(function(a){return a.id===n.match&&(a.round=n.round),a}),a}),k=Bacon.mergeAll([S,B,E,V]);k.throttle(10).onValue(function(a){console.log("New state created"),console.log(a),d&&d(a.matches.value())}),S.merge(B).throttle(10).onValue(function(a){s.find(".standings").replaceWith(c.standings(h,g,o(a.participants,a.matches)))}),m.replaceWith(c.standings(h));var I=c.unassigned.appendTo(s);E.merge(S).merge(B).throttle(10).onValue(function(a){var n=s.find(".match");a.matches.each(function(a){var t=n.filter('[data-matchId="'+a.id+'"]');t.length?t.replaceWith(p.create(b,a).markup):a.round?s.find("div.round").filter('[data-roundId="'+a.round+'"]').append(p.create(b,a).markup):I.append(p.create(b,a).markup)})}),i.each(function(a){h.push(a)}),u.each(function(a){b.push(a)})},u={init:function(n){n=n||{};var t=this,e=_(n.init),r=e.pluck("a").union(e.pluck("b").value()).pluck("name").unique();return new i(a('<div class="jqgroup"></div>').appendTo(t),r,e,n.save||null)}};a.fn.group=function(n){return u[n]?u[n].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof n&&n?(a.error("Method "+n+" does not exist on jQuery.group"),void 0):u.init.apply(this,arguments)}})(jQuery);